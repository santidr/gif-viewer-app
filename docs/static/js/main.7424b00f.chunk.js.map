{"version":3,"sources":["components/AddCategory.js","components/HeaderApp.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifViewerApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","HeaderApp","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifViewerApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA8BeA,EA3BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAgBvC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAS,IACpBP,GAAc,SAAAQ,GAAI,OAAKN,GAAL,mBAAoBM,OACtCL,EAAc,MAKlB,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SAjBc,SAAC,GAAD,IAAaD,EAAb,EAAGE,OAAUF,MAAb,OACtBP,EAAcO,SCKPG,EAXG,SAAC,GAAuB,IAArBb,EAAoB,EAApBA,cACjB,OACI,mCACI,6CACA,cAAC,EAAD,CACIA,cAAeA,Q,QCEhBc,EATK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC1B,OACI,sBAAKC,UAAU,2CAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,6BAAMA,Q,uBCJLK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAUF,GAF9C,+DAIIG,MAAMR,GAJV,cAIbS,EAJa,gBAKIA,EAASC,OALb,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YACrB,CACIC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAXvB,kBAeZY,GAfY,4CAAH,sDC4BLM,EAxBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECAN,SAACA,GAAc,IAAD,EAEZpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAU,WACNlB,EAAQC,GAAUkB,MAAK,SAAAX,GACnBS,EAAS,CACLV,KAAMC,EACNO,SAAS,SAIlB,CAACd,IAEGe,EDf0BI,CAAanB,GAAjCW,EAFiB,EAEtBL,KAAaQ,EAFS,EAETA,QAErB,OACI,qCACI,oBAAIlB,UAAU,wCAAd,SAAwDI,IAEtDc,GAAW,4CAEb,qBAAKlB,UAAU,YAAf,SAEIe,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAESA,GADCA,EAAIC,aEMnBU,EAnBM,WAAO,IAAD,EAEaxC,mBAAS,CAAC,oBAFvB,mBAEhByC,EAFgB,KAEJ1C,EAFI,KAIvB,OACI,qCACI,cAAC,EAAD,CAAWA,cAAeA,IAE1B,6BAEQ0C,EAAWb,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCTtCsB,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.7424b00f.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = ({ target: { value } }) =>\r\n        setInputValue(value);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if (inputValue.length > 0) {\r\n            setCategories(cats => [inputValue, ...cats])\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default AddCategory;\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import AddCategory from './AddCategory'\r\n\r\nconst HeaderApp = ({ setCategories }) => {\r\n    return (\r\n        <header>\r\n            <h1>GifViwerApp</h1>\r\n            <AddCategory \r\n                setCategories={setCategories}\r\n            />\r\n        </header>\r\n    );\r\n}\r\n \r\nexport default HeaderApp;","const GifGridItem = ({ title, url }) => {\r\n    return ( \r\n        <div className=\"card animate__animated animate__bounceIn\">\r\n            <img src={ url } alt={ title } />\r\n            <h5>{ title }</h5>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GifGridItem;","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=FEaCmZCaMFVPadfZfCZJGXI1LG77TjQj`\r\n\r\n    const response = await fetch(url)\r\n    const { data } = await response.json()\r\n\r\n    const gifs = data.map(img => (\r\n        {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    ))\r\n\r\n    return gifs\r\n}","import GifGridItem from \"./GifGridItem\"\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(category)\r\n\r\n    return ( \r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeInLeft\">{ category }</h3>\r\n\r\n            { loading && <p>Cargando...</p> }\r\n\r\n            <div className=\"card-grid\">\r\n            {\r\n                images.map(img => (\r\n                    <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img }\r\n                    />\r\n                ))\r\n            }\r\n            </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default GifGrid;","import { useEffect, useState } from \"react\"\r\n\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(gifs => {\r\n            setState({\r\n                data: gifs,\r\n                loading: false\r\n            })\r\n        })\r\n\r\n    }, [category])\r\n\r\n    return state\r\n}","import { useState } from 'react';\r\n\r\nimport HeaderApp from './components/HeaderApp'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifViewerApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['Attack on Titan'])\r\n\r\n    return (\r\n        <>\r\n            <HeaderApp setCategories={setCategories} />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid key={category} category={category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default GifViewerApp;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport GifViewerApp from './GifViewerApp';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(<GifViewerApp />, document.getElementById('root'));\r\n"],"sourceRoot":""}